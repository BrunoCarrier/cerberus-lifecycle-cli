/*
 * Copyright (c) 2016 Nike Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

allprojects {
    apply plugin: 'findbugs'
    apply plugin: 'cobertura'

    findbugs {
        ignoreFailures = true
        sourceSets = [ project.sourceSets.main ]
    }

    tasks.withType(FindBugs) {
        reports {
            xml.withMessages = true
        }
    }

    cobertura {
        // https://github.com/stevesaliman/gradle-cobertura-plugin/blob/master/usage.md
        coverageReportDir = new File("$buildDir/reports/cobertura")
        coverageFormats = ['html', 'xml']
        coverageIgnoreTrivial = false
        coverageExcludes = [

        ]
    }

    // lets differentiate between the builds of master and the PR builds.
    def branch = System.getProperty("FROM_BRANCH", "master")

    // the below block is for setting or overriding config specific to pull request analysis
    if (! branch.equalsIgnoreCase('master')) {
        // For PRA we don't want the build to fail on failures.
        // We want to be able to collect them and inject them back into the Pull Request.
        codenarc {
            ignoreFailures = true
        }
        test {
            ignoreFailures = true
        }
    }
}